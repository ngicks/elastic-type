package estype

// auto-generated by ./generate_agg/main.go (with slight manual formatting)

type AggregateMetricDouble struct {
	Min        float64 `json:"min"`
	Max        float64 `json:"max"`
	Sum        float64 `json:"sum"`
	ValueCount uint64  `json:"value_count"`
}

type AggregateMetricDoubleMin struct {
	Min float64 `json:"min"`
}

type AggregateMetricDoubleMax struct {
	Max float64 `json:"max"`
}

type AggregateMetricDoubleMinMax struct {
	Min float64 `json:"min"`
	Max float64 `json:"max"`
}

type AggregateMetricDoubleSum struct {
	Sum float64 `json:"sum"`
}

type AggregateMetricDoubleMinSum struct {
	Min float64 `json:"min"`
	Sum float64 `json:"sum"`
}

type AggregateMetricDoubleMaxSum struct {
	Max float64 `json:"max"`
	Sum float64 `json:"sum"`
}

type AggregateMetricDoubleMinMaxSum struct {
	Min float64 `json:"min"`
	Max float64 `json:"max"`
	Sum float64 `json:"sum"`
}

type AggregateMetricDoubleValueCount struct {
	ValueCount uint64 `json:"value_count"`
}

type AggregateMetricDoubleMinValueCount struct {
	Min        float64 `json:"min"`
	ValueCount uint64  `json:"value_count"`
}

type AggregateMetricDoubleMaxValueCount struct {
	Max        float64 `json:"max"`
	ValueCount uint64  `json:"value_count"`
}

type AggregateMetricDoubleMinMaxValueCount struct {
	Min        float64 `json:"min"`
	Max        float64 `json:"max"`
	ValueCount uint64  `json:"value_count"`
}

type AggregateMetricDoubleSumValueCount struct {
	Sum        float64 `json:"sum"`
	ValueCount uint64  `json:"value_count"`
}

type AggregateMetricDoubleMinSumValueCount struct {
	Min        float64 `json:"min"`
	Sum        float64 `json:"sum"`
	ValueCount uint64  `json:"value_count"`
}

type AggregateMetricDoubleMaxSumValueCount struct {
	Max        float64 `json:"max"`
	Sum        float64 `json:"sum"`
	ValueCount uint64  `json:"value_count"`
}
